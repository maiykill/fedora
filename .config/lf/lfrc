### While using in Fedora xfce worskstation-40 the binary for mimetype command is not found
### hence it should be installed with 
#$ sudo dnf install perl-File-MimeInfo
### Previewer is supported in Wezterm to use but!  
#$ sudo dnf install chafa

## Experimental stuffs
set incsearch true
set sixel true






#set ratios 1:3:3
set ratios 1:1:7:5


# Basic vars
set period 1
set shellopts '-eu'
set ifs "\n"
set info size:time
set icons true
cmd mkdir $mkdir -p "$@"
set scrolloff 10
set previewer ~/.config/lf/previewer
set dupfilefmt "%f.newer%n" 
set promptfmt "\033[34;1m%d\033[0m\033[1m%f\033[0m"


### Custom Commands
cmd on-select &{{
    lf -remote "send $id set statfmt \"$(eza -ld --color=always "$f" | sed 's/\\/\\\\/g;s/"/\\"/g')\""
}}





cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
      text/*|application/json|inode/x-empty|application/x-subrip) "$EDITOR" $fx;;
      image/vnd.djvu|application/pdf|application/postscript) setsid -f zathura $fx >/dev/null 2>&1 ;;
      image/x-xcf) setsid -f gimp $fx >/dev/null 2>&1 ;;
      image/svg+xml) display -- $f ;;
      image/*) setsid -f nomacs $fx 2>/dev/null ;;
      audio/*|video/x-ms-asf) mpv --audio-display=no $fx ;;
      video/*) setsid -f mpv --quiet $fx >/dev/null 2>&1 ;;
      video/*) setsid -f vlc --quiet $fx >/dev/null 2>&1 ;;
      application/pdf|application/vnd.djvu|application/epub*) setsid -f zathura "$fx" >/dev/null 2>&1 ;;
      application/pgp-encrypted) "$EDITOR" $fx ;;
      application/javascript) "$EDITOR" $fx ;;
      application/vnd.openxmlformats-officedocument.wordprocessingml.document|application/vnd.oasis.opendocument.text|application/vnd.openxmlformats-officedocument.spreadsheetml.sheet|application/vnd.oasis.opendocument.spreadsheet|application/vnd.oasis.opendocument.spreadsheet-template|application/vnd.openxmlformats-officedocument.presentationml.presentation|application/vnd.oasis.opendocument.presentation-template|application/vnd.oasis.opendocument.presentation|application/vnd.ms-powerpoint|application/vnd.oasis.opendocument.graphics|application/vnd.oasis.opendocument.graphics-template|application/vnd.oasis.opendocument.formula|application/vnd.oasis.opendocument.database) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
      application/octet-stream) case ${f##*.} in
                                  doc|docx|xls|xlsx|odt|ppt|pptx) setsid -f libreoffice $fx >/dev/null 2>&1 ;;
                                  bash|dash|sh) "$EDITOR" $fx ;;
                                  ghw) setsid -f gtkwave $f >/dev/null 2>&1 ;;
                                  ts) setsid -f mpv $fx -quiet >/dev/null 2>&1 ;;
                                  *) setsid -f zathura $fx >/dev/null 2>&1 ;;
      esac ;;
      *) for f in $fx; do setsid -f $OPENER $f >/dev/null 2>&1; done;;
    esac
}}



cmd extract ${{
	set -f
	case $f in
			*.tar.bz2)   tar xjf $fx     ;;
			*.tar.gz)    tar xzf $fx     ;;
			*.bz2)       bunzip2 $fx     ;;
			*.rar)       unrar e $fx     ;;
			*.gz)        gunzip $fx      ;;
			*.tar)       tar xf $fx      ;;
			*.tbz2)      tar xjf $fx     ;;
			*.tgz)       tar xzf $fx     ;;
			*.zip)       unzip $fx       ;;
			*.Z)         uncompress $fx  ;;
			*.7z)        7z x $fx        ;;
			*.tar.xz)    tar xf $fx      ;;
		esac
}}



cmd pasteoverride &{{
	set -f
	mode=$(head -1 ~/.local/share/lf/files)
	list=$(sed 1d ~/.local/share/lf/files)
	set -- _ $list; shift
	[ $# -gt 0 ] || exit
	case $mode in
		copy)
			rsync -r "$@" ./
			;;
		move)
			rsync -r --remove-source-files "$@" ./
			;;
	esac
	lf -remote 'save\nmove\n'
	lf -remote "send $id load"
	lf -remote "send $id echo \"\033[0;32mpaste overridden $# file(s)\033[0m\""
}}



cmd fzf_jump ${{
    res="$(fd -H . | fzf --reverse --header="Fzf to location")"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}




cmd skim_jump ${{
    res="$(sk --reverse --header="Skim to location")"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}




cmd ripgrep_jump ${{
    cmd="rg --column --line-number --no-heading --color=always --smart-case --hidden"
    fzf --ansi --disabled --layout=reverse --header="Ripgrepping in files" --delimiter=: \
        --bind="start:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind="change:reload([ -n {q} ] && $cmd -- {q} || true)" \
        --bind='enter:become(lf -remote "send $id select \"$(printf "%s" {1} | sed '\''s/\\/\\\\/g;s/"/\\"/g'\'')\"")' \
        --preview-window='+{2}-/2' \
        --preview='bat --color=always --highlight-line={2} -- {1}'
}}






## Custom Mappings
map f
map e
map ff :fzf_jump
map fs :skim_jump
map fr :ripgrep_jump
map egv $$EDITOR $(fzf --preview='bat --color=always --style=grid {1}')
map egh $hx .
map eh $hx "$f"
map ev $nvim "$f"
map P pasteoverride
map <gt> extract
map o &mimeopen $f
map O $mimeopen --ask $fx
map S shell
map . calcdirsize
map x push :mkdir<space>
map <c-r> reload
map <backspace2> set hidden!
map D delete
map <a-D> shred
map A :rename; cmd-end # at the very end
map r push A<c-u> # new rename
map I :rename; cmd-home # at the very beginning
map i :rename # before extension
map a :rename; cmd-right # after extension
map gd cd ~/Documents/
map gw cd ~/Downloads/
map gs cd ~/Study/
map gp cd ~/Programs/
map gi cd ~/Pictures/
map gv cd ~/Videos/
map gm cd ~/Music/songs/
map gt cd ~/Tmpr/
map g/ cd /
map g. cd ~/.config/
map gf cd ~/.local/share/fonts/
map gj cd ~/Documents/jobs/
